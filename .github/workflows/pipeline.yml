name: CI/CD Pipeline

on:
  push:
    branches:
      - main
      - develop
  pull_request:
    branches:
      - main
      - develop

jobs:
  app2:
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4 
        
      - name: Set up JDK
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '17'   
          
      - name: Setup config
        run: |
          cd ./MicroServiceUser/MicroServiceUserData
          mkdir config
          echo 'spring.datasource.url=jdbc:postgresql://db:5432/microserviceuserdata' > config/application.properties   
          
      - name: Cache Maven packages
        uses: actions/cache@v4
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven-${{ hashFiles('MicroserviceUser/MicroserviceUserData/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-maven  
            
      - name: Start services with Docker Compose
        run: |
          docker-compose -f ./MicroServiceUser/compose.yml up -d db 
          
      - name: Make wait-for-it executable
        run: chmod +x ./MicroServiceUser/MicroServiceUserData/wait-for-it.sh  
        
      - name: Wait for PostgreSQL
        run: |
          cd ./MicroServiceUser/MicroServiceUserData
          echo "Waiting for PostgreSQL to be available..."
          ./wait-for-it.sh db:5432 --timeout=60 --strict -- echo "PostgreSQL is up" 
          
      - name: Get project version
        id: vars
        run: echo "VERSION=$(mvn help:evaluate -Dexpression=project.version -q -DforceStdout)" >> $GITHUB_ENV        
       
      - name: Run test APP2
        run: |
          cd ./MicroServiceUser/MicroServiceUserData
          mvn test  
          
      - name: Build APP2
        run: |
          cd ./MicroServiceUser/MicroServiceUserData
          mvn jacoco:prepare-agent
          mvn jacoco:report
          mvn package -DskipTests
          
      - name: SonarCloud Scan for APP2
        #if: github.ref == 'refs/heads/develop'
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN_APP2 }}
        run: |
          cd ./MicroServiceUser/MicroServiceUserData
          mvn sonar:sonar \
            -Dsonar.projectKey=${{ secrets.SONAR_PROJECT_KEY_APP2 }} \
            -Dsonar.organization=${{ secrets.SONAR_ORGANIZATION }} \
            -Dsonar.host.url=https://sonarcloud.io \
            -Dsonar.login=$SONAR_TOKEN	
            
      - name: Log in to Docker Hub
        env:
          DOCKERHUB_USERNAME: ${{ secrets.DOCKERHUB_USERNAME }}
          DOCKERHUB_PASSWORD: ${{ secrets.DOCKERHUB_PASSWORD }}
        run: echo $DOCKERHUB_PASSWORD | docker login -u $DOCKERHUB_USERNAME --password-stdin
        
      - name: Build Docker image APP2
        run: |
          cd ./MicroServiceUser/MicroServiceUserData
          docker build -t ${{ secrets.DOCKERHUB_USERNAME }}/app2:${{ env.VERSION }} .
          
      - name: Push Docker image to Docker Hub
        run: |
          cd ./MicroServiceUser/MicroServiceUserData
          docker push ${{ secrets.DOCKERHUB_USERNAME }}/app2:${{ env.VERSION }}
