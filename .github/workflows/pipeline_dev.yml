name: Pipeline_dev

on:
  push:
    branches:
      - develop
  pull_request:
    branches:
      - develop

jobs:
  # app1:
  #   runs-on: ubuntu-latest
  #   steps:
  #     - name: Checkout code
  #       uses: actions/checkout@v4 
        
  #     - name: Set up Python
  #       uses: actions/setup-python@v4
  #       with:
  #         python-version: '3.13.0'

  #     - name: Extract Version
  #       id: get_version
  #       run: |
  #         echo "VERSION=$(grep -oP "(?<=__version__ = \")\d+\.\d+\.\d+" ./MicroServiceUser/app1/__version__.py)" >> $GITHUB_ENV
      
  #     - name: Install dependencies
  #       run: |
  #         cd ./MicroServiceUser/app1
  #         python -m pip install --upgrade pip
  #         pip install -r requirements.txt
          
  #     - name: Run tests with coverage
  #       run: |
  #         cd ./MicroServiceUser/app1
  #         pytest -v --cov=./ --cov-report=xml --cov-report=html

  #     - name: SonarCloud Scan
  #       uses: sonarsource/sonarcloud-github-action@master
  #       with:
  #         args: >           
  #           -Dsonar.projectKey=${{secrets.SONAR_PROJECT_KEY_APP1}}
  #           -Dsonar.organization=${{secrets.SONAR_ORGANIZATION}}
  #           -Dsonar.projectBaseDir=./MicroServiceUser/app1
  #           -Dsonar.python.coverage.reportPaths=coverage.xml
  #       env:
  #         GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  #         SONAR_TOKEN: ${{ secrets.SONAR_TOKEN_APP1 }}
      
  #     - name: Log in to Docker Hub
  #       env:
  #         DOCKERHUB_USERNAME: ${{ secrets.DOCKERHUB_USERNAME }}
  #         DOCKERHUB_PASSWORD: ${{ secrets.DOCKERHUB_PASSWORD }}
  #       run: echo $DOCKERHUB_PASSWORD | docker login -u $DOCKERHUB_USERNAME --password-stdin
        
  #     - name: Build Docker image APP1
  #       run: |
  #         cd ./MicroServiceUser/app1
  #         docker build -t ${{ secrets.DOCKERHUB_USERNAME }}/app1:${{ env.VERSION }} .
          
  #     - name: Push Docker image to Docker Hub
  #       run: |
  #         cd ./MicroServiceUser/app1
  #         docker push ${{ secrets.DOCKERHUB_USERNAME }}/app1:${{ env.VERSION }}
    
  # app3:
  #   runs-on: ubuntu-latest
  #   steps:
  #     - name: Checkout code
  #       uses: actions/checkout@v4 
        
  #     - name: Set up Python
  #       uses: actions/setup-python@v4
  #       with:
  #         python-version: '3.13.0'

  #     - name: Extract Version
  #       id: get_version
  #       run: |
  #         echo "VERSION=$(grep -oP "(?<=__version__ = \")\d+\.\d+\.\d+" ./MicroServiceUser/app3/__version__.py)" >> $GITHUB_ENV
      
  #     - name: Install dependencies
  #       run: |
  #         cd ./MicroServiceUser/app3
  #         python -m pip install --upgrade pip
  #         pip install -r requirements.txt
          
  #     - name: Run tests with coverage
  #       run: |
  #         cd ./MicroServiceUser/app3
  #         pytest -v --cov=./ --cov-report=xml --cov-report=html

  #     - name: SonarCloud Scan
  #       uses: sonarsource/sonarcloud-github-action@master
  #       with:
  #         args: >           
  #           -Dsonar.projectKey=${{secrets.SONAR_PROJECT_KEY_APP3}}
  #           -Dsonar.organization=${{secrets.SONAR_ORGANIZATION}}
  #           -Dsonar.projectBaseDir=./MicroServiceUser/app3
  #           -Dsonar.python.coverage.reportPaths=coverage.xml
  #       env:
  #         GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  #         SONAR_TOKEN: ${{ secrets.SONAR_TOKEN_APP3 }}
      
  #     - name: Log in to Docker Hub
  #       env:
  #         DOCKERHUB_USERNAME: ${{ secrets.DOCKERHUB_USERNAME }}
  #         DOCKERHUB_PASSWORD: ${{ secrets.DOCKERHUB_PASSWORD }}
  #       run: echo $DOCKERHUB_PASSWORD | docker login -u $DOCKERHUB_USERNAME --password-stdin
        
  #     - name: Build Docker image APP3
  #       run: |
  #         cd ./MicroServiceUser/app3
  #         docker build -t ${{ secrets.DOCKERHUB_USERNAME }}/app3:${{ env.VERSION }} .
          
  #     - name: Push Docker image to Docker Hub
  #       run: |
  #         cd ./MicroServiceUser/app3
  #         docker push ${{ secrets.DOCKERHUB_USERNAME }}/app3:${{ env.VERSION }}
  app2:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4 
        
      - name: Set up JDK
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '17'   
          
      - name: Cache Maven packages
        uses: actions/cache@v4
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven-${{ hashFiles('MicroserviceUser/MicroserviceUserData/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-maven 
       
      - name: Get project version
        id: vars
        run: echo "VERSION=$(mvn help:evaluate -Dexpression=project.version -q -DforceStdout)" >> $GITHUB_ENV        
       
      # - name: Run test APP2
      #   run: |
      #     cd ./MicroServiceUser/MicroServiceUserData
      #     mvn test  
          
      - name: Build APP2
        run: |
          cd ./MicroServiceUser/MicroServiceUserData
          mvn jacoco:prepare-agent
          mvn jacoco:report
          mvn package -DskipTests
      
      # - name: Sonar 
      #   run: |
      #     cd ./MicroServiceUser/MicroServiceUserData
      #     mvn verify org.sonarsource.scanner.maven:sonar-maven-plugin:sonar -Dsonar.projectKey=${{secrets.SONAR_PROJECT_KEY_APP2}}
          
      - name: SonarCloud Scan
        uses: sonarsource/sonarcloud-github-action@master
        with:
          args: >           
            -Dsonar.projectKey=${{secrets.SONAR_PROJECT_KEY_APP2}}
            -Dsonar.organization=${{secrets.SONAR_ORGANIZATION}}
            -Dsonar.projectBaseDir=./MicroServiceUser/app2
            -Dsonar.python.coverage.reportPaths=coverage.xml
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN_APP2 }}
            
      # - name: Log in to Docker Hub
      #   env:
      #     DOCKERHUB_USERNAME: ${{ secrets.DOCKERHUB_USERNAME }}
      #     DOCKERHUB_PASSWORD: ${{ secrets.DOCKERHUB_PASSWORD }}
      #   run: echo $DOCKERHUB_PASSWORD | docker login -u $DOCKERHUB_USERNAME --password-stdin
        
      # - name: Build Docker image APP2
      #   run: |
      #     cd ./MicroServiceUser/MicroServiceUserData
      #     docker build -t ${{ secrets.DOCKERHUB_USERNAME }}/app2:${{ env.VERSION }} .
          
      # - name: Push Docker image to Docker Hub
      #   run: |
      #     cd ./MicroServiceUser/MicroServiceUserData
      #     docker push ${{ secrets.DOCKERHUB_USERNAME }}/app2:${{ env.VERSION }}
       