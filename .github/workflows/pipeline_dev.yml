name: Pipeline_dev

on:
  push:
    branches:
      - develop
  pull_request:
    branches:
      - develop

jobs:
  app1:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4 
      
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.13.0'

      - name: Install dependencies
        run: |
          cd ./MicroServiceUser/app1
          python -m pip install --upgrade pip
          pip install -r requirements.txt
       
      - name: Set Swagger
        run: |
          cd ./MicroServiceUser/app1/app
          echo "SWAGGER_ENABLED=true" >> $GITHUB_ENV

      - name: Run tests with coverage
        run: |
          cd ./MicroServiceUser/app1
          pytest -v --cov=./ --cov-report=xml --cov-report=html

      - name: SonarCloud Scan
        uses: sonarsource/sonarcloud-github-action@master
        with:
          args: >           
            -Dsonar.projectKey=${{secrets.SONAR_PROJECT_KEY_APP1}}
            -Dsonar.organization=${{secrets.SONAR_ORGANIZATION}}
            -Dsonar.projectBaseDir=./MicroServiceUser/app1
            -Dsonar.python.coverage.reportPaths=coverage.xml
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN_APP1 }}      
    
  app3:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4 
            
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.13.0'
      
      - name: Install dependencies
        run: |
          cd ./MicroServiceUser/app3
          python -m pip install --upgrade pip
          pip install -r requirements.txt
      
      - name: Set Swagger
        run: |
          cd ./MicroServiceUser/app3/projectionService
          echo "SWAGGER_ENABLED=true" >> $GITHUB_ENV

      - name: Run tests with coverage
        run: |
          cd ./MicroServiceUser/app3
          pytest -v --cov=./ --cov-report=xml --cov-report=html

      - name: SonarCloud Scan
        uses: sonarsource/sonarcloud-github-action@master
        with:
          args: >           
            -Dsonar.projectKey=${{secrets.SONAR_PROJECT_KEY_APP3}}
            -Dsonar.organization=${{secrets.SONAR_ORGANIZATION}}
            -Dsonar.projectBaseDir=./MicroServiceUser/app3
            -Dsonar.python.coverage.reportPaths=coverage.xml
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN_APP3 }}
      
  app2:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4 
              
      - name: Set up JDK
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '17'   
      
      - name: Configure Swagger for Development
        run: |
          cd ./MicroServiceUser/MicroServiceUserData
          echo "swagger.enabled=true" >> src/main/resources/application.properties
          
      - name: Cache Maven packages
        uses: actions/cache@v4
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven-${{ hashFiles('MicroserviceUser/MicroserviceUserData/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-maven 
      
      # - name: Run test APP2
      #   run: |
      #     cd ./MicroServiceUser/MicroServiceUserData
      #     mvn test  
          
      - name: Build APP2
        run: |
          cd ./MicroServiceUser/MicroServiceUserData
          mvn jacoco:prepare-agent
          mvn jacoco:report   
          mvn clean verify -DskipTests
            
      - name: SonarCloud Scan
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN_APP2 }}
        run: |
          cd ./MicroServiceUser/MicroServiceUserData
          mvn sonar:sonar \
            -Dsonar.projectKey=${{ secrets.SONAR_PROJECT_KEY_APP2 }} \
            -Dsonar.organization=${{ secrets.SONAR_ORGANIZATION }} \
            -Dsonar.host.url=https://sonarcloud.io \
            -Dsonar.coverage.jacoco.xmlReportPaths=target/site/jacoco/jacoco.xml \
            -Dsonar.branch.name=develop \
            -Dsonar.login=$SONAR_TOKEN

      
       