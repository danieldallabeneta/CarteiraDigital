name: Pipeline_dev

on:
  push:
    branches:
      - develop
  pull_request:
    branches:
      - develop

jobs:
  app1:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4 
        
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.13.0'

      - name: Set up Java 17
        uses: actions/setup-java@v2
        with:
          java-version: '17'
          distribution: 'temurin'

      - name: Extract Version
        id: get_version
        run: |
          echo "VERSION=$(grep -oP "(?<=__version__ = \")\d+\.\d+\.\d+" ./MicroServiceUser/app1/__version__.py)" >> $GITHUB_ENV

      - name: Install dependencies
        run: |
          cd ./MicroServiceUser/app1
          python -m pip install --upgrade pip
          pip install -r requirements.txt
       
      - name: Install SonarScanner
        run: |
          curl -sSLo sonar-scanner.zip https://binaries.sonarsource.com/Distribution/sonar-scanner-cli/sonar-scanner-cli-4.6.2.2472-linux.zip
          unzip sonar-scanner.zip
          mv sonar-scanner-4.6.2.2472-linux sonar-scanner
          echo "PATH=${PWD}/sonar-scanner/bin:${PATH}" >> $GITHUB_ENV
      
      - name: Confirm SonarScanner installation
        run: sonar-scanner -v
          
      - name: Run tests with coverage
        run: |
          cd ./MicroServiceUser/app1
          pytest -v  --cov=. --cov-report=xml:coverage.xml --cov-report=html
      
      - name: SonarCloud Scan for APP1
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN_APP1 }}
          JAVA_HOME: /opt/hostedtoolcache/Java_Temurin-Hotspot_jdk/17.0.13-11/x64
          PATH: /opt/hostedtoolcache/Java_Temurin-Hotspot_jdk/17.0.13-11/x64/bin:${PATH}
        run: |
          cd ./MicroServiceUser/app1
            sonar-scanner \
              -Dsonar.projectKey=${{secrets.SONAR_PROJECT_KEY_APP1}} \
              -Dsonar.organization=${{secrets.SONAR_ORGANIZATION}} \
              -Dsonar.sources=. \
              -Dsonar.host.url=https://sonarcloud.io \
              -Dsonar.python.coverage.reportPaths=coverage.xml \
              -Dsonar.login=$SONAR_TOKEN

      # - name: Log in to Docker Hub
      #   env:
      #     DOCKERHUB_USERNAME: ${{ secrets.DOCKERHUB_USERNAME }}
      #     DOCKERHUB_PASSWORD: ${{ secrets.DOCKERHUB_PASSWORD }}
      #   run: echo $DOCKERHUB_PASSWORD | docker login -u $DOCKERHUB_USERNAME --password-stdin
        
      # - name: Build Docker image APP1
      #   run: |
      #     cd ./MicroServiceUser/app1
      #     docker build -t ${{ secrets.DOCKERHUB_USERNAME }}/app1:${{ env.VERSION }} .
          
      # - name: Push Docker image to Docker Hub
      #   run: |
      #     cd ./MicroServiceUser/MicroServiceUserData
      #     docker push ${{ secrets.DOCKERHUB_USERNAME }}/app1:${{ env.VERSION }}